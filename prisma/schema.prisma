// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  content   String   @db.VarChar(255)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  likes     Like[]       // üëç Users who liked this post
  comments  Comment[]    // üí¨ Comments on this post
  bookmarks Bookmark[]   // üîñ Users who bookmarked it
  tags      PostTag[]    // üè∑Ô∏è Tags attached

  @@index([authorId])
}

model User {
  id        String   @id
  firstName String?
  lastName  String?
  email     String   @unique

  posts     Post[]
  likes     Like[]
  comments  Comment[]
  bookmarks Bookmark[]

  @@index([id])
}

model Like {
  id     String @id @default(cuid())
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([postId, userId]) // A user can only like once
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Bookmark {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([userId, postId]) // Only 1 bookmark per user/post
}

model Tag {
  id   String @id @default(cuid())
  name String @unique

  posts PostTag[]
}

model PostTag {
  id     String @id @default(cuid())
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String

  @@unique([postId, tagId]) // Prevent duplicate tag on a post
}


